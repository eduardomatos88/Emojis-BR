{"version":3,"sources":["App.js","index.js"],"names":["App","useState","emojiListBase","emojiList","setEmojiList","className","onChange","event","searchTerm","target","value","toLowerCase","contador","searchResult","filter","emoji","traduzido","indexOf","placeholder","map","key","onClick","emojiReady","navigator","clipboard","writeText","store","addNotification","title","message","type","container","animationIn","animationOut","dismiss","duration","onScreen","copyEmojiToClipboard","src","link","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"omtOAwEeA,MAjEf,WAAgB,IAAD,EACqBC,mBAASC,GAD9B,mBACNC,EADM,KACKC,EADL,KA0Cb,OACE,oCACA,kBAAC,IAAD,MACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,SAAf,iBAGA,yBAAKA,UAAU,gBACb,2BAAOC,SA9Cf,SAAqBC,GACnB,IAAMC,EAAaD,EAAME,OAAOC,MAAMC,cACtC,GAAkB,KAAfH,EACDJ,EAAaF,OACR,CACL,IAAIU,EAAW,EACTC,EAAeX,EAAcY,QAAO,SAAAC,GACxC,QAAGH,EAAW,OAG4C,IAAvDG,EAAMC,UAAUL,cAAcM,QAAQT,KACvCI,KACO,OAKXA,EAAW,EACXR,EAAaS,KA4BqBR,UAAU,SAASa,YAAY,wBAE/D,yBAAKb,UAAU,cACZF,EAAUgB,KAAI,SAAAJ,GAAK,OAClB,yBAAKV,UAAU,kBAAkBe,IAAKL,EAAMA,MAAOM,QAAS,kBA7BtE,SAA8BN,GAC5B,IAAMO,EAAa,IAAMP,EAAQ,IACjCQ,UAAUC,UAAUC,UAAUH,GAC9BI,QAAMC,gBAAgB,CACpBC,MAAM,UAAD,OAAYb,EAAZ,aACLc,QAAS,8CACTC,KAAM,UACNC,UAAW,YACXC,YAAa,CAAC,oBAAqB,mBACnCC,aAAc,CAAC,oBAAqB,oBACpCC,QAAS,CACPC,SAAU,IACVC,UAAU,KAiB4DC,CAAqBtB,EAAMA,SAC3F,yBAAKuB,IAAKvB,EAAMwB,KAAMC,IAAKzB,EAAMA,MAAOV,UAAU,gBAClD,0BAAMA,UAAU,mBAAmBU,EAAMC,mBC3DvDyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.aa92df6c.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport ReactNotification, { store } from 'react-notifications-component'\nimport './App.css';\nimport 'react-notifications-component/dist/theme.css'\n\nimport emojiListBase from './database/emojiList.json'\n\nfunction App() {\n  const [emojiList, setEmojiList] = useState(emojiListBase)\n\n\n  function searchEmoji(event) {\n    const searchTerm = event.target.value.toLowerCase()\n    if(searchTerm === '') {\n      setEmojiList(emojiListBase)\n    } else {\n      var contador = 0;\n      const searchResult = emojiListBase.filter(emoji => {\n        if(contador > 50) {\n          return false\n        }\n        if(emoji.traduzido.toLowerCase().indexOf(searchTerm) !== -1) {\n          contador++\n          return true\n        }else {\n          return false\n        }\n      })\n      contador = 0\n      setEmojiList(searchResult)\n    }\n  }\n  function copyEmojiToClipboard(emoji) {\n    const emojiReady = ':' + emoji + ':'\n    navigator.clipboard.writeText(emojiReady)\n    store.addNotification({\n      title: `Emoji \"${emoji}\" copiado`,\n      message: 'Agora Ã© colar para utilizar o seu emoji!',\n      type: 'success',\n      container: 'top-right',\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 5000,\n        onScreen: true\n      },\n    })\n  }\n\n  return (\n    <>\n    <ReactNotification />\n      <div className=\"container\">\n        <div className=\"title\">\n          Git Emojis BR\n        </div>\n        <div className=\"emoji-search\">\n          <input onChange={searchEmoji} className=\"search\" placeholder=\"Digite para buscar\" />\n        </div>\n        <div className=\"emoji-list\">\n          {emojiList.map(emoji => (\n            <div className=\"emoji-container\" key={emoji.emoji} onClick={() => copyEmojiToClipboard(emoji.emoji)}>\n              <img src={emoji.link} alt={emoji.emoji} className=\"emoji-image\"></img>\n              <span className=\"emoji-traduzido\">{emoji.traduzido}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}